Index: wn2vec/wntransformer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import nltk\nfrom nltk.corpus import wordnet as wn\nfrom typing import List, Dict\n\nimport os\nfrom collections import defaultdict\n\n\nclass WordNetTransformer:\n\n    def __init__(self, marea_file, do_not_replace_threshold: int = 20) -> None:\n        \"\"\"\n        Path to the file produced by marea\n        \"\"\"\n        if not os.path.exists(marea_file):\n            raise FileNotFoundError(\"Could not find marea file\")\n\n        self._marea_file = marea_file\n        self._counter = defaultdict(int)\n        # Get count of words in corpus\n        with open(marea_file) as f:\n            for line in f:\n                words = line.split()\n                for w in words:\n                    # TODO skip stop words\n                    self._counter[w] += 1\n        # Create synonym dictionary with NLTK\n        # if needed, install wordnet\n        nltk.download(\"wordnet\")\n        # sorted(d.items(), key=lambda item: item[1])\n        # words_sorted_by_frequency = sorted(self._counter, key=lambda item: item[1], reverse=True)\n        # {k: v for k, v in sorted(x.items(), key=lambda item: item[1])}\n        words_sorted_by_frequency = [k for k, v in\n                                     sorted(self._counter.items(), key=lambda item: item[1], reverse=True)]\n        self._do_not_replace_threshold = do_not_replace_threshold\n        self._dict = self.dictCreate(words_sorted_by_frequency)\n\n    def dictCreate(self, word_list) -> Dict:\n        \"\"\"\n        Creates a dictionary from the whole data set, they keys are in order of their frequency words\n        and the values are synonyms of keys from synset\n        @argument: 'word_list' a list of unique words from the whole dataset in order of frequency\n        @return: a dictionary of all the variables in the dataset, the keys are the unique variables\n                   with high frequency, and values are key's synonym\n        \"\"\"\n        dictionary = {}\n        for i in range(len(word_list)):\n            this_word = word_list[i]\n            # skip common words\n            this_word_count = self._counter.get(this_word, 0)\n            if this_word_count > self._do_not_replace_threshold:\n                continue\n            synonym_list = self.synonym(this_word)\n            dictionary[this_word] = self._highest_count_synonym(synonym_list)\n        return dictionary\n\n    def _highest_count_synonym(self, synonym_list):\n        \"\"\"\n        :param synonym_list: a list of a word and its synonyms in Wordnet\n        :return: The word (synonym) with the highest count in our dataset\n        \"\"\"\n        if len(synonym_list) == 0:\n            raise ValueError(\"synonym_list was length zero, should never happen\")\n        max_count = 0\n        max_word = synonym_list[0]\n        for s in synonym_list:\n            c = self._counter.get(s, 0)\n            if c > max_count:\n                max_word = s\n                max_count = c\n        return max_word\n\n    def synonym(self, word: str) -> List:\n        \"\"\"\n        @argument: 'word' A word from the input dataset\n        @return: a list of synonyms of the words\n        \"\"\"\n        synonyms = [word]\n        for syn in wn.synsets(word):\n            for l in syn.lemmas():\n                synonyms.append(l.name())\n        return synonyms\n\n    def transform(self, sentence: str) -> str:\n        pass
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/wn2vec/wntransformer.py b/wn2vec/wntransformer.py
--- a/wn2vec/wntransformer.py	(revision b371972035ccb796c1912ab8640f4ec02d78dbd9)
+++ b/wn2vec/wntransformer.py	(date 1654000548853)
@@ -81,5 +81,22 @@
                 synonyms.append(l.name())
         return synonyms
 
+    def replace_data_set(self, data_list, dictionary) ->List:
+
+        """
+        Replaces the variable in dataset with their synonyms from the dictionary
+        @argument: 'data_list' a list of all the data_set in form of a list
+                          "dictionary" a dictionary created with the whole dataset
+        @return: 'data_list' a new list with the whole list where the words were replaced by their synonyms
+
+        """
+
+        for i in range(len(data_list)):
+            if data_list[i] in dictionary:
+                data_list[i] = dictionary.get(data_list[i])
+            else:
+                raise ValueError("the word is not in the dictionary")
+        return (data_list)
+
     def transform(self, sentence: str) -> str:
         pass
\ No newline at end of file
Index: tests/test_replace.py
===================================================================
diff --git a/tests/test_replace.py b/tests/test_replace.py
deleted file mode 100644
--- a/tests/test_replace.py	(revision b371972035ccb796c1912ab8640f4ec02d78dbd9)
+++ /dev/null	(revision b371972035ccb796c1912ab8640f4ec02d78dbd9)
@@ -1,41 +0,0 @@
-import unittest
-from script.replace import*
-
-import nltk
-
-#nltk.download("wordnet")
-from nltk.corpus import wordnet as wn # Import Wordnet
-from collections import Counter  # Import Counter
-import numpy as np
-import csv
-
-class ReplaceTestCase(unittest.TestCase):
-    def test_sort_words_by_count(self):
-        test1 = ['cancer', 'disease', 'caused', 'cell', 'crab', 'simple', 'cadre', 'cell', 'cancer', 'disease', 'cell', 'cancer', 'cell']
-        result = Replace.sort_words_by_count(test1)
-        expected = ['cell', 'cancer', 'disease', 'caused', 'crab', 'simple', 'cadre']
-        self.assertEqual(expected, result, 'Arrangement do not match expected.')
-        # 'cancer', 'disease', 'caused', 'cell', 'crab', 'simple', 'cadre']
-
-    def test_synonym(self):
-        expected = ['tissue', 'tissue', 'tissue_paper', 'weave', 'tissue']
-        result = Replace.synonym('tissue')
-        self.assertEqual(expected, result, 'Synonym do not match expected.')
-    
-    def test_dictCreate(self):
-        test_list = ['cadre', 'tissue', 'cell', 'weave', 'cider']
-        expected_dictionary = {'cell': 'cadre', 'cadre': 'cadre', 'tissue': 'tissue', 'tissue_paper': 'tissue', 'weave': 'tissue', 'cider': 'cider', 'cyder': 'cider'}
-        rep = Replace(test_list)
-        d = rep.get_word_dictionary()
-        self.assertEqual(expected_dictionary, d, 'Dictionary created do not match expected.')
-      
-    
-    def test_replace_data_set(self):
-        test_set = ['cell', 'cadre', 'cell', 'dyestuff', 'dye', 'dye']
-        replace = Replace(list=test_set)
-        result = replace.get_replaced_data()
-        expected_set =['cell', 'cell', 'cell', 'dye', 'dye', 'dye']
-        self.assertEqual(expected_set, result, 'Key do not match expected.')
-
-if __name__ == '__main__':
-    unittest.main()
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"be8ca527-4a03-46a4-9c90-f796605885b8\" name=\"Changes\" comment=\"updated test_replace.py and replace_data_set function\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/tests/test_wntransformer.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"29hjGwOSV2nMqheKz80tkCFnkz8\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/niyone/Documents/GitHub/wn2vec&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Python tests.Python tests for test_wntransformer.WordNetTransformerTestCase.test_replace_data_set\">\n    <configuration name=\"wntransformer\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wn2vec\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/wn2vec\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/wn2vec/wntransformer.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_wntransformer.WordNetTransformerTestCase\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wn2vec\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_wntransformer.WordNetTransformerTestCase&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_wntransformer.WordNetTransformerTestCase.test_replace_data_set\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wn2vec\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_wntransformer.WordNetTransformerTestCase.test_replace_data_set&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_wntransformer.WordNetTransformerTestCase.test_synonym\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wn2vec\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_wntransformer.WordNetTransformerTestCase.test_synonym&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python tests.Python tests for test_wntransformer.WordNetTransformerTestCase.test_replace_data_set\" />\n        <item itemvalue=\"Python tests.Python tests for test_wntransformer.WordNetTransformerTestCase\" />\n        <item itemvalue=\"Python tests.Python tests for test_wntransformer.WordNetTransformerTestCase.test_synonym\" />\n        <item itemvalue=\"Python.wntransformer\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"be8ca527-4a03-46a4-9c90-f796605885b8\" name=\"Changes\" comment=\"\" />\n      <created>1653572118799</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1653572118799</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"updated test_replace.py and replace_data_set function\">\n      <created>1653663490515</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653663490515</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"updated test_replace.py and replace_data_set function\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"updated test_replace.py and replace_data_set function\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tests/test_replace.py</url>\n          <line>3</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b371972035ccb796c1912ab8640f4ec02d78dbd9)
+++ b/.idea/workspace.xml	(date 1654000362798)
@@ -2,8 +2,7 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="be8ca527-4a03-46a4-9c90-f796605885b8" name="Changes" comment="updated test_replace.py and replace_data_set function">
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/tests/test_wntransformer.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -18,6 +17,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="develop" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -124,7 +128,14 @@
       <option name="project" value="LOCAL" />
       <updated>1653663490515</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="updated test_replace.py and replace_data_set function">
+      <created>1653673396363</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1653673396363</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
